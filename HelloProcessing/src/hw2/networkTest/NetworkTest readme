Part 4 (required for 591, optional for 481): Performance Comparison (25pts)
For this section of the homework you will implement a second networking protocol and do a performance
comparison. If for Part 2 of the assignment you opted to send entire GameObjects between server and
client, develop an alternative method sending some other Objects or information which provides the same
behavior. For example, you may opt to send information encoded in Strings which get parsed on the other
side.2 If you did something similar for Part 2, then make your Game Object Model Serializable and
send GameObjects instead.
To compare your two methods, you will use the server with two and three clients. You will want to
measure the performance in terms of runtime. Given that you’re using a fixed number of clients (two and
three), you should change the number of static and moving objects in the environment. The moving objects
do not have to be controlled by keyboard inputs. You will want to measure how long it takes to complete
some number of game loop iterations (say 1,000) under different conditions. How long does it take with 10
moving objects on each client? What about 100? Can you get to 500? How does this change if you’re using
three instead of two clients?

2If you’re already sending entire GameObjects, you may find it useful to play with the .writeReplace() and
.readResolve() methods provided by the Serializable interface to achieve your second protocol.


To conduct this test, I will be varying the message sent from server to client to update the client's game model.
The client when updated will be sending a default Input object back to the server to confirm reception. Neither server,
will process the messages received beyond this.

Factors: #Clients, #GameObjects, Message Type
#Clients
	2, 3

#Game Objects
	10, 100, 500
	
Message types
	RectangleObject
	RectangleString
	PhysicsEvent